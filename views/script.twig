<script language="javascript" type="text/javascript">
/**
 * Created by JetBrains PhpStorm.
 * User: a.kolomiec
 * Date: 23.12.11
 * Time: 15:21
 * To change this template use File | Settings | File Templates.
 */


$(document).ready(function(){
    window.player_track = new Object();
    init_jplayer();
    drawleft();
    drawcenter();
    drawright();
    drawlsearch();

});

function init_jplayer () {
    $("#jquery_jplayer_1").jPlayer({
        ready: function () {
            $(this).jPlayer("setMedia", {
                mp3: ""
            });
            init();
        },
        swfPath: "/js",
        errorAlerts: false,
        cssSelectorAncestor: "#fixed-wrapper",
        cssSelector: {
            videoPlay: ".jp-video-play",
            play: ".jp-play",
            pause: ".jp-pause",
            stop: ".jp-stop",
            seekBar: ".jp-seek-bar",
            playBar: ".jp-play-bar",
            mute: ".jp-mute",
            unmute: ".jp-unmute",
            volumeBar: ".jp-volume-bar",
            volumeBarValue: ".jp-volume-bar-value",
            volumeMax: ".jp-volume-max",
            currentTime: ".jp-current-time",
            duration: ".jp-duration",
            fullScreen: ".jp-full-screen",
            restoreScreen: ".jp-restore-screen",
            gui: ".jp-gui",
            noSolution: ".jp-no-solution"
        },
        supplied: "mp3, wma",
        ended: function () {
            $(".jp-seek-bar").css("width","0%");

            if (shuffle()) {
                getrandomtrack();
                set_selection();
            } else {
                getnexttrack();
                set_selection();
            }
        }
    });
}
function set_selection(){

    $.getJSON("/getstate/",function(data){
                $(".track.track-selected").removeClass("track-selected");
                window.playing_track = new Object();
                window.playing_track.track_id = data[9];
                window.playing_track.artist = $(".jp-name-artist").text();
                window.playing_track.name = $(".jp-name-song").text();
                window.playing_track.side = data[1];
                window.playing_track.playlistid = data[6];
                window.playing_track.serial = data[2];
                window.playing_track.search = data[3];
        if (data[1] == "right" && data[6] == $(".pl").attr("id")) {
            $('.pl > .track[serial='+data[2]+']').addClass("track-selected");
        } else{
            if (data[1] == "left" && data[6] == $('#leftblock').attr('lbid')) {
                if (data[3] == $('input[name="search-input"]').val()){
                    $('#leftblock > .track[serial='+data[2]+']').addClass("track-selected");
                }else{
                    $('#leftblock > .track[serial='+data[2]+']').addClass("track-selected");
                }
            }
        }
        }
    );
}

function shuffle() {
    if ($(".shuffle").css("display") == "none") {
        return true;
    } else {
        return false;
    }
}
function getside () {
    return window.playing_track.side;
}


// Выставляем обработчик событий на элементы управления.
function init () {
    var track_button = $('.track');
    track_button.unbind('click');
    track_button.bind('click',function () {
        playsong($(this));


    });
    var repeat_button = $('.repeat');
    repeat_button.unbind('click');
    repeat_button.bind('click', function () {
        //$.stickr({note:'Кнопка повтор зажата',className:'opacity',position:{right:0,top:0}});
        $.ajax({
            url:	 "/repeat/on",
            success: function(response, code){
                //$.stickr({note:' /repeate/on выполнен',className:'opacity',position:{right:0,top:0}});
                    $('.repeat').css({'display' : 'none'});
                    $('.repeat-off').css({'display' : 'block'});
            },
            error:  function(xhr, str){
                $.stickr({note:'Возникла ошибка: '+str+xhr.responseCode,className:'opacity',position:{right:0,top:0}});
            }
        });
    });
    var repeatoff_button = $('.repeat-off');
    repeatoff_button.unbind('click');
    repeatoff_button.bind('click', function () {
        //$.stickr({note:'Кнопка повтор отпущена',className:'opacity',position:{right:0,top:0}});
        $.ajax({
            url:	 "/repeat/off",
            success: function(response, code){
                //$.stickr({note:' /repeate/off выполнен',className:'opacity',position:{right:0,top:0}});
                    $('.repeat-off').css({'display' : 'none'});
                    $('.repeat').css({'display' : 'block'});
            },
            error:  function(xhr, str){
                $.stickr({note:'Возникла ошибка: ' + xhr.responseCode,className:'opacity',position:{right:0,top:0}});
            }
        });
    });

    var shuffle_button = $('.shuffle');
    shuffle_button.unbind('click');
    shuffle_button.bind('click', function () {
        //$.stickr({note:'Кнопка в перемешку зажата',className:'opacity',position:{right:0,top:0}});
        $.ajax({
            url:	 "/shuffle/on",
            success: function(response, code){
                //$.stickr({note:' /shuffle/on выполнен',className:'opacity',position:{right:0,top:0}});
                $('.shuffle').css({'display' : 'none'});
                $('.shuffle-off').css({'display' : 'block'});
            },
            error:  function(xhr, str){
                $.stickr({note:'Возникла ошибка: '+str+xhr.responseCode,className:'opacity',position:{right:0,top:0}});
            }
        });
    });

    var shuffleoff_button = $('.shuffle-off');
    shuffleoff_button.unbind('click');
    shuffleoff_button.bind('click', function () {
        //$.stickr({note:'Кнопка в перемешку отпущена',className:'opacity',position:{right:0,top:0}});
        $.ajax({
            url:	 "/shuffle/off",
            success: function(response, code){
                //$.stickr({note:' /shuffle/off выполнен',className:'opacity',position:{right:0,top:0}});
                $('.shuffle-off').css({'display' : 'none'});
                $('.shuffle').css({'display' : 'block'});
            },
            error:  function(xhr, str){
                $.stickr({note:'Возникла ошибка: '+ str + xhr.responseCode,className:'opacity',position:{right:0,top:0}});
            }
        });
    });

    var download_btn = $('#download-btn-small');
    download_btn.unbind('click');
    download_btn.bind('click', function(){
        var url;
        url = $('#wrapper-for-main-player').attr('track-id');
        if (typeof(url) != "undefined" || url == '') {
            window.open("/getsong/"+url, '_blank');
            //$.stickr({note:' /getsong/' + url,className:'opacity',position:{right:0,top:0}});
        } else {
            $.stickr({note:' Нет файла для загрузки ' + url,className:'opacity',position:{right:0,top:0}});
        }
    });

    var prev_button = $('.jp-prev');
    prev_button.unbind('click');
    prev_button.bind('click', function () {
        //Если первый трек в списке, то вообще ничего делать не будем.

            if (shuffle()) {
                getrandomtrack();
                set_selection();
            } else {
                getprevtrack();
                set_selection();
            }


    });
    var next_button = $('.jp-next');
    next_button.unbind('click');
    next_button.bind ('click',function () {
        if (shuffle()) {
            getrandomtrack();
            set_selection();
        } else {
            getnexttrack();
            set_selection();
        }
        //$.stickr({note:'jp-next выполнен',className:'opacity',position:{right:0,top:0}});
    });

    var search_button = $('#search-in-vk');
    search_button.unbind('click');
    search_button.bind('click',function () {
        search();
    });
    $('input#search-input').submit(function (event) {
        event.preventDefault();
        search();
        return false;
    });
    $('h1').gradientText({
        colors: ['#50AADC', '#640064']
    });
    var top100_button = $("#top100");
    top100_button.unbind('click');
    top100_button.bind('click', function (){
        drawleft();
    });
    var logout_button = $("#go-out");
    logout_button.unbind('click');
    logout_button.bind('click', function () {
        logout();
    });
    var add_in_playlist_button = $(".add-in-playlist-sign");
    add_in_playlist_button.unbind('click');
    add_in_playlist_button.bind('click', function (event) {
        event.preventDefault();
        event.stopPropagation();
        addinplaylist($(this).parent().attr('track-id'));
    });
    var delete_from_playlist_button = $(".delete-sign");
    delete_from_playlist_button.unbind('click');
    delete_from_playlist_button.bind('click', function (event) {
        event.preventDefault();
        event.stopPropagation();
        delfromplaylist($(this).parent());
    });
    var playlist_menu_item = $(".my-playlist");
    playlist_menu_item.unbind('click');
    playlist_menu_item.bind('click', function (event) {
        event.preventDefault();
        event.stopPropagation();
        drawcenter($(this).attr("id"));
    });
    var new_playlist_button = $("#btn-new-playlist");
    new_playlist_button.unbind('click');
    new_playlist_button.bind('click', function (event) {
        playlistname = prompt("Введите имя нового плейлиста", "Новый плейлист");
        if (playlistname != '' && playlistname != null) {
            newplaylist(playlistname);
        } else {
            if (playlistname == '' ) {
                alert('Плейлист на может иметь пустое имя');
            }
        }
    });

    var download_button = $(".save-sign");
    download_button.unbind('click');
    download_button.bind('click', function (event) {
        event.stopPropagation();
    });

    var last_search_menu_item = $("#div-last-search").find("p");
    last_search_menu_item.unbind('click');
    last_search_menu_item.bind('click', function (event) {
        event.stopPropagation();
        $("#search-input").val($(this).text());
        //$.stickr({note:'search = '+$(this).text(),className:'opacity',position:{right:0,top:0}});
        search();

    });

    var delete_playlist_button = $("#btn-del-playlist");
    delete_playlist_button.unbind('click');
    delete_playlist_button.bind('click', function () {
        delplaylist($(".pl").attr("id"));
    });

    var delete_playlist_button2 = $(".del-playlist-item");
    delete_playlist_button2.unbind('click');
    delete_playlist_button2.bind('click', function () {
        delplaylist($(".pl").attr("id"));
    });

    var rename_playlist_button = $(".rename-playlist-item");
    rename_playlist_button.unbind('click');
    rename_playlist_button.bind('click', function () {
        var plname=$('#center-column > .pl_header h1').text();
        name = prompt("Введите имя плейлиста", plname);
        if (name != '' && name != null) {
            renameplaylist($(".pl").attr("id"), name);
        } else {
            if (name == '' ) {
                alert('Плейлист на может иметь пустое имя');
            }
        }
    });


    var addpllist_button = $("#favourite-btn-small");
    addpllist_button.unbind('click');
    addpllist_button.bind('click', function () {
        addplayinginplaylist();
    });

    var addall_button = $("#addalltrack");
    addall_button.unbind('click');
    addall_button.bind('click', function () {
        addall();
    });
    var reserialbase = $("#sla");
    reserialbase.unbind('click');
    reserialbase.bind('click', function () {
        addall();
    });

}

function renameplaylist(playlistid, newname) {

    $.ajax({
        url:	 "/renameplaylist/",
        type:	 'POST',
        data: { playlistid: playlistid, newname: newname },
        success: function(response, code){
            if (response == 'myplaylist') {
                $.stickr({note:'Нельзя переименовать плейлист по умолчанию.',className:'opacity',position:{right:0,top:0}});
            }
            //$.stickr({note:'Запрос drawcenter выполнен',className:'opacity',position:{right:0,top:0}});

        },
        error:  function(xhr, str){
            $.stickr({note:'Возникла ошибка при запросе drawcenter: ' + xhr.responseCode,className:'opacity',position:{right:0,top:0}});
        },
        complete: function () {
            drawcenter(playlistid);
            drawright();
            init();
        }
    });
}

function addall(){
    var arr = [];
    $('#leftblock > .track').each(function () {
        arr.push($(this).attr('track-id'));
    });
    addinplaylistworeload(arr);
}

function addplayinginplaylist () {
    var trackid = $('#wrapper-for-main-player').attr('track-id');
    var playlistid = $(".pl").attr("id");
    if (typeof(trackid) != "undefined") {
        //$.stickr({note:'Добавить трек id='+trackid+' в плейлист с id='+playlistid,className:'opacity',position:{right:0,top:0}});
        $.ajax({
            url:	 "/addinplaylist/",
            type:	 'POST',
            data: { trackid: trackid , playlistid: playlistid },
            success: function(response, code){
                //$.stickr({note:'Запрос drawcenter выполнен',className:'opacity',position:{right:0,top:0}});
                drawcenter(playlistid);
            },
            error:  function(xhr, str){
                $.stickr({note:'Возникла ошибка при запросе addplayinginplaylist(): ' + xhr.responseCode,className:'opacity',position:{right:0,top:0}});
            },
            complete: function () {
                init();
            }
        });
    }
}


function getprevtrack () {
    //$.stickr({note:'Отправляем запрос предыдущего трека на сервер',className:'opacity',position:{right:0,top:0}});
    $.ajax({
        url:	 "/getprevtrack/",
        success: function(response, code){
            var result = $.parseJSON(response);
            if (result) {
                playtrack(result['filename'], result['artist'], result['trak']);
            }
            //$.stickr({note:' /getprevtrack/ выполнен',className:'opacity',position:{right:0,top:0}});
        },
        error:  function(xhr, str){
            $.stickr({note:'Возникла ошибка: ' + xhr.responseCode,className:'opacity',position:{right:0,top:0}});
        }
    });
}
function getnexttrack () {
    //$.stickr({note:'Отправляем запрос следующего трека на сервер',className:'opacity',position:{right:0,top:0}});
    $.ajax({
        url:	 "/getnexttrack/",
        success: function(response, code){
            var result = $.parseJSON(response);
            if (result) {

                playtrack(result['filename'], result['artist'], result['trak']);

            }
            //$.stickr({note:' /getnexttrack/ выполнен',className:'opacity',position:{right:0,top:0}});
        },
        error:  function(xhr, str){
            $.stickr({note:'Возникла ошибка: ' + xhr.responseCode,className:'opacity',position:{right:0,top:0}});
        }
    });
}

function getrandomtrack() {
    $.stickr({note:'Отправляем запрос случайного трека на сервер'+window.playing_track.side,className:'opacity',position:{right:0,top:0}});
    $.ajax({
        url:	 "/getrandomtrack/",
        success: function(response, code){
            var result = $.parseJSON(response);
            if (result) {

                playtrack(result['filename'], result['artist'], result['trak']);

            }
            //$.stickr({note:' /getrandomtrack/ выполнен',className:'opacity',position:{right:0,top:0}});
        },
        error:  function(xhr, str){
            $.stickr({note:'Возникла ошибка: ' + xhr.responseCode,className:'opacity',position:{right:0,top:0}});
        }
    });
}


function playtrack (filename, artist, name) {
    if (typeof (filename) != 'undefined'){
        if (filename != "undefined.mp3"){
            $("#jquery_jplayer_1").jPlayer("setMedia", {
                mp3: "/media/"+filename
            }).jPlayer("play");

            $(".jp-name-artist").text(artist);
            $(".jp-name-song").text(name);

        }
    }
}

function logout() {
    //$.stickr({note:'разлогиниться',className:'opacity',position:{right:0,top:0}});
    $.cookie('svireluser', null);
    $.ajax({
        url:	 "/logout/",
        success: function(response, code){
            //$.stickr({note:'logout выполнен',className:'opacity',position:{right:0,top:0}});
            $("#user").html("");
            $("#registration").html(response);
            drawcenter();
            state_save();
        },
        error:  function(xhr, str){
            $.stickr({note:'Возникла ошибка: ' + xhr.responseCode,className:'opacity',position:{right:0,top:0}});
        },
        complete: function (response) {
            init();
        }
    });
}

function search() {
    q = $('input[name="search-input"]').val();
    if (q == '' || (q.length<=2)) {
        $.stickr({note:'Запрос пустой',className:'opacity',position:{right:0,top:0}});
    }else {
        drawleft("s", q);
        drawlsearch();
        init();
    }
    //$.stickr({note:'Search выполнен запрос'+q,className:'opacity',position:{right:0,top:0}});
}

function playsong (in_track) {
    $('.track-selected').removeClass('track-selected');
    //alert($(in_track).attr('track-id'));
    $(in_track).addClass('track-selected');
    window.playing_track = [];
    window.playing_track.track_id = $(in_track).attr('track-id');
    window.playing_track.artist = $(in_track).find(".track_artist").text();
    window.playing_track.name= $(in_track).find(".track_name").text();
    window.playing_track.serial = $(in_track).attr('serial');
    if (window.playing_track.track_id != "undefined" && typeof (window.playing_track.track_id) != 'undefined') {
        var par = $(".track-selected.track").parent();
        window.playing_track.side = '';
        if ($(par).hasClass("left-block-top100")){
            window.playing_track.side = 'left';
        } else {
            if ($(par).hasClass("pl")) {
                window.playing_track.side = 'right';
            }
        }
        //$.stickr({note:'Ищу файл '+artist+'-'+trak+' '+trackid,className:'opacity',position:{right:0,top:0}});
        playtrack(window.playing_track.track_id+".mp3", window.playing_track.artist, window.playing_track.name);
        //$.stickr({note:'Playsong выполнен',className:'opacity',position:{right:0,top:0}});
        state_save();
    }
}

function changepage(url ,page, totalpages, side) {
    //$.stickr({note:'Запрос '+url,className:'opacity',position:{right:0,top:0}});
    $.ajax({
        url:	 url+page,
        type:	 'GET',
        success: function(response, code){
            if ((code==200) || (response != "") ){
                //$.stickr({note:'changepage выполнен'+url+page,className:'opacity',position:{right:0,top:0}});
                if (side == 'left') {
                    $("#leftblock").html(response);
                    delete pageleft; pageleft = new Paginator('pageleft', totalpages, 10, page, url, 'left');
                } else {
                    if (side == 'right') {
                        $(".pl").html(response);
                        delete pagecenter; pagecenter = new Paginator('pagecenter', totalpages, 10, page, url, 'right');
                    }
                }
            }else{
                $.stickr({note:'Сервер вернул какой-то непонятный код ответа: ' + code,className:'opacity',position:{right:0,top:0}});
            }
        },
        error:  function(xhr, str){
            $.stickr({note:'Возникла ошибка: ' + xhr.responseCode,className:'opacity',position:{right:0,top:0}});

        },
        complete: function (response) {
            init();
        }
    });
    return false;
}

function getpage(url ,page, num ,totalpages, side) {
    num = num == null;
    //$.stickr({note:'Запрос '+url+ page,className:'opacity',position:{right:0,top:0}});
    $.ajax({
        url:	 url+page,
        type:	 'GET',
        success: function(response, code){
            if ((code==200) || (response != "") ){
                var par;
                if (side == 'left'){
                    par = $(".left-block-top100");
                } else {
                    par = $(".pl");
                }
                //$.stickr({note:'getpage выполнен'+url,className:'opacity',position:{right:0,top:0}});
                if (num) {
                    plnow = $(par).html(response).find(".track:first");
                } else {
                    plnow = $(par).html(response).find(".track:last");
                }
                if (side == 'left'){
                    delete pageleft;
                    pageleft = new Paginator('pageleft', totalpages, 10, page, url, 'left');
                } else {
                    delete pagecenter;
                    pagecenter = new Paginator('pagecenter', totalpages, 10, page, url, 'right');
                }

                if (typeof plnow != "undefined"){
                    playsong(plnow);
                }
                //return response;

            }else{
                $.stickr({note:'Сервер вернул какой-то непонятный код ответа: ' + code,className:'opacity',position:{right:0,top:0}});
            }
        },
        error:  function(xhr, str){
            $.stickr({note:'Возникла ошибка: ' + xhr.responseCode,className:'opacity',position:{right:0,top:0}});

        },
        complete: function () {
            init();

        }
    });

}

function Checkuser(responce) {
    req = $.parseJSON(responce);
//todo Расписать нормально ошибки при регистрации
    if ( isNaN(req.id) ) {
        if ( req.code == 1 ) {
            $.stickr({note:'Ошибка при регистрации '+req.code,className:'opacity',position:{right:0,top:0}});
            $('#pass-error').css({"display" :"block"});
        }
        if ( req.code == 2 ) {
            $.stickr({note:'Ошибка при регистрации '+req.code,className:'opacity',position:{right:0,top:0}});
        }
        if ( req.code == 3 ) {
            $('#login-error').css({"display" :"block"});
            $.stickr({note:'Ошибка при регистрации '+req.code,className:'opacity',position:{right:0,top:0}});
        }
    } else {
        return true;
    }
}

function regauth () {
    //todo При входе в систему сохранять поисковые запросы которые делал пользователь.
    login = $('input[name="login"]').val();
    pass  = $('input[name="password"]').val();
    //$.stickr({note:'Топаем регистрироваться или логиниться: login: '+login+' Pass: '+ pass,className:'opacity',position:{right:0,top:0}});
    $.ajax({
        url:	 "/reg/",
        type:	 'POST',
        data: { login: login, pass: pass },
        success: function(response, code){
            //$.stickr({note:'regauthcode = '+code+' выполнен'+response,className:'opacity',position:{right:0,top:0}});
            if (Checkuser(response)) {
                //$.stickr({note:'Пользователь вошел или зарегистрировался? '+req.id,className:'opacity',position:{right:0,top:0}});
                $.cookie('svireluser', req.id,  { expires: 365, path: '/', domain: '{{ cookie_domain }}' });
                $("#registration").html("");
                drawright();
                drawcenter();
                drawlsearch();
            }
        },
        error:  function(xhr, str){
            $.stickr({note:'Возникла ошибка: ' + xhr.responseCode,className:'opacity',position:{right:0,top:0}});
        },
        complete: function (response) {
            init();
        }
    });
}



/*
 * Для запроса определенного контента для левой колонки указываем в параметре такие значения
 * 1: top100
 * 2: Жанры
 * 3: Радио
 * 4: Из vk.com
 * s: Поиск музыки
 * req: Строка запроса
 *
 * */
function drawleft(data, req){
    //$.stickr({note:'Загружаем левую колонку',className:'opacity',position:{right:0,top:0}});
    $.ajax({
        url:	 "/getleft/",
        type:	 'POST',
        data: { cont: data , req: req},
        success: function (response) {
            //$.stickr({note:'Запрос drawleft выполнен',className:'opacity',position:{right:0,top:0}});
            delete pageleft;
            $("#left-column").html(response);
        },
        error:  function(xhr, str){
            $.stickr({note:'Возникла ошибка при запросе drawleft: ' + xhr.responseCode,className:'opacity',position:{right:0,top:0}});
        },
        complete: function () {
            drawlsearch();
            init();
        }
    });
}

function drawright(){
    //$.stickr({note:'Загружаем правую колонку',className:'opacity',position:{right:0,top:0}});
    $.ajax({
        url:	 "/getregistration/",
        type:	 'POST',
        success: function(response, code){
            $("#registration").html(response);

            //$.stickr({note:'Запрос drawright выполнен',className:'opacity',position:{right:0,top:0}});
        },
        error:  function(xhr, str){
            $.stickr({note:'Возникла ошибка при запросе drawcenter: ' + xhr.responseCode,className:'opacity',position:{right:0,top:0}});
        },
        complete: function (response) {
            init();
        }
    });
}


function addinplaylist (track) {
    var trackid = track;
    var playlistid = $(".pl").attr("id");
    //$.stickr({note:'Добавить трек id='+trackid+' в плейлист с id='+playlistid,className:'opacity',position:{right:0,top:0}});
    $.ajax({
        url:	 "/addinplaylist/",
        type:	 'POST',
        data: { trackid: trackid , playlistid: playlistid },
        success: function(response, code){
            //$.stickr({note:'Запрос drawcenter выполнен',className:'opacity',position:{right:0,top:0}});
            drawcenter(playlistid);
        },
        error:  function(xhr, str){
            $.stickr({note:'Возникла ошибка при запросе drawcenter: ' + xhr.responseCode,className:'opacity',position:{right:0,top:0}});
        },
        complete: function () {
            init();
        }
    });
}


function addinplaylistworeload (arr) {
    var trackid = $.toJSON(arr);
    var playlistid = $(".pl").attr("id");
    var currentpage = '';
    if (typeof (pagecenter.inputData) != "undefined") {
        currentpage = pagecenter.inputData.pageCurrent;
    } else {
        currentpage=0;
    }
    //$.stickr({note:'Добавить трек id='+trackid+' в плейлист с id='+playlistid,className:'opacity',position:{right:0,top:0}});
    $.ajax({
        url:	 "/addinplaylistjson/",
        type:	 'POST',
        data: { trackid: trackid , playlistid: playlistid },
        success: function(response, code){
            //$.stickr({note:'Запрос drawcenter выполнен',className:'opacity',position:{right:0,top:0}});

        },
        error:  function(xhr, str){
            $.stickr({note:'Возникла ошибка при запросе drawcenter: ' + xhr.responseCode,className:'opacity',position:{right:0,top:0}});
        },
        complete: function () {
            drawcenter(playlistid);
            init();
        }
    });
}


function delfromplaylist (track) {
    var playlistid = $(".pl").attr('id');
    var serial = $(track).attr("serial");
    var currpage =
    //$.stickr({note:'Удалить трек serial='+serial+' из плейлиста с id='+playlistid,className:'opacity',position:{right:0,top:0}});
    $.ajax({
        url:	 "/delfromplaylist/",
        type:	 'POST',
        data: { serial: serial , playlistid: playlistid },
        success: function(response, code){
            //$.stickr({note:'Запрос delfromplaylist выполнен',className:'opacity',position:{right:0,top:0}});
            $("#center-column").html(response);
        },
        error:  function(xhr, str){
            $.stickr({note:'Возникла ошибка при запросе delfromplaylist: ' + xhr.responseCode,className:'opacity',position:{right:0,top:0}});
        },
        complete: function () {
            init();
        }
    });
}

function save_sign (track) {
    var trackid = $(track).attr('track-id');

}

function newplaylist(playlistname) {
    $.ajax({
        url:	 "/newplaylist/",
        type:	 'POST',
        data: { playlistname: playlistname },
        success: function(response, code){
            //$.stickr({note:'Запрос drawlsearch выполнен',className:'opacity',position:{right:0,top:0}});
            drawright();
        },
        error:  function(xhr, str){
            $.stickr({note:'Возникла ошибка при запросе drawlsearch: ' + xhr.responseCode,className:'opacity',position:{right:0,top:0}});
        },
        complete: function () {
            init();
        }
    });
}
function delplaylist(playlistid) {
    $.ajax({
        url:	 "/delplaylist/",
        type:	 'POST',
        data: { playlistid: playlistid },
        success: function(response, code){
            //$.stickr({note:'Запрос delete play list выполнен',className:'opacity',position:{right:0,top:0}});
            result = $.parseJSON(response);
            if (result.code == 0) {
                //$.stickr({note:'code = 0',className:'opacity',position:{right:0,top:0}});
                drawcenter();
                drawright();
            } else {
                $.stickr({note:'code = 1',className:'opacity',position:{right:0,top:0}});
            }
        },
        error:  function(xhr, str){
            $.stickr({note:'Возникла ошибка при запросе drawlsearch: ' + xhr.responseCode,className:'opacity',position:{right:0,top:0}});
        },
        complete: function () {
            init();
        }
    });
}
function drawcenter(playlist, page){
    //$.stickr({note:'Загружаем центральную колонку',className:'opacity',position:{right:0,top:0}});
    if (typeof(playlist) == "undefined" || playlist == "") {
        playlist = "default";
    }
    if (typeof(page) == "undefined") {
        page = 0;
    }
    $.ajax({
        url:	 "/getcenter/"+playlist+"/"+page,
        type:	 'GET',
        success: function(response, code){
            //$.stickr({note:'Запрос drawcenter выполнен',className:'opacity',position:{right:0,top:0}});
            $("#center-column").html(response);
        },
        error:  function(xhr, str){
            $.stickr({note:'Возникла ошибка при запросе drawcenter: ' + xhr.responseCode,className:'opacity',position:{right:0,top:0}});
        },
        complete: function () {
            init();
        }
    });
}
function drawlsearch () {
    $.ajax({
        url:	 "/showlastsearch/",
        type:	 'GET',
        success: function(response, code){
            //$.stickr({note:'Запрос drawlsearch выполнен',className:'opacity',position:{right:0,top:0}});
            $("#div-last-search").html(response);
        },
        error:  function(xhr, str){
            $.stickr({note:'Возникла ошибка при запросе drawlsearch: ' + xhr.responseCode,className:'opacity',position:{right:0,top:0}});
        },
        complete: function () {
            init();
        }
    });
}

function state_save(){
    var state = new Object();
    state.username = $.cookie('svireluser');
    state.playlistid ='';
    state.currentpage = '';
    state.side = getside();
    if (window.playing_track.side == 'left') {
        state.playlistid = $("#leftblock").attr("lbid");
    } else {
        state.playlistid = $(".pl").attr("id");
    }
    state.search = $('input[name="search-input"]').val();
    state.serial = window.playing_track.serial;
    if (window.playing_track.side == 'left'){
        if (typeof (pageleft.inputData) != "undefined") {
            state.currentpage = pageleft.inputData.pageCurrent;
        } else {
            state.currentpage=1;
        }
    } else {
        if (typeof (pagecenter.inputData) != "undefined") {
            state.currentpage = pagecenter.inputData.pageCurrent;
        } else {
            state.currentpage=1;
        }
    }
    //todo Когда будет готов сортировка сделать выбор сортировки.
    state.sort = "";


    //$.stickr({note:'Сохраняем состояние в базу',className:'opacity',position:{right:0,top:0}});
    $.ajax({
        url:	 "/state/save/",
        type:	 'POST',
        data: { username: state.username, side: state.side, playlistid: state.playlistid, search: state.search, serial:state.serial, currentpage:state.currentpage, sort:state.sort },
        success: function(response, code){
            //$.stickr({note:'сохранение состояния прошло успешно.',className:'opacity',position:{right:0,top:0}});
        },
        error:  function(xhr, str){
            $.stickr({note:'Возникла ошибка при сохранении состяния: ' + xhr.responseCode,className:'opacity',position:{right:0,top:0}});
        }
    });
}



</script>