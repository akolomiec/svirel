<!DOCTYPE HTML>
<html>
<head>
    {% include 'header.twig' %}
</head>

<body>
<div id="wrapper-general-for-content">
    <!--Начало Фиксированного плеера-->
    {% include 'player.twig' %}
    <!--Конец Фиксированного плеера-->


    <!--Начало основного содержимого-->
    <div class="min-max-div" id="wrapper-table-main">
        <table cellpadding="0" cellspacing="0" border="0" class="wrapper-table">
            <tr>
                <td class="p2"></td>
                <td>
                    <table cellpadding="0" cellspacing="0" border="0" class="wrapper-table">
                        <tr>
                            <!--Начало левой колонки основного содержимого-->
                            <td class="p43">
                                <div id="cetegories">
                                    {% include 'categories.twig' %}
                                </div>
                                <div id="left-column">

                                </div>

                            </td>
                            <!--Конец левой колонки основного содержимого-->
                            <td class="p7"></td>
                            <!--Начало средней колонки основного содержимого-->
                            <td class="p43 wrapper-playlist">
                                <div id="center-column">


                                </div>
                            </td>
                            <!--Конец средней колонки основного содержимого-->
                            <td class="p7"></td>
                        </tr>
                    </table>
                </td>
                <!--Начало блоков правой панели-->
                <td class="px216" id="for-px216-main">
                    <!--Начало Зарегестрируйтесь или войдите-->
                    <div id="registration">

                    </div>
                    <!--Конец Зарегестрируйтесь или войдите-->
                    <!--Начало Имя пользователя и плейлисты-->
                    <div id="user">

                    </div>
                    <!--Конец Имя пользователя и плейлисты-->
                    <!--Начало Рекомендуем плейлисты-->
                    <div id="recommend">

                    </div>
                    <!--Конец Рекомендуем плейлисты-->
                    <!--Начало Имя исполнителя, альбом и лучшие песни-->
                    <div id="about-artist">

                    </div>
                    <!--Конец Имя исполнителя, альбом и лучшие песни-->
                    <!--Начало 5-ка похожих-->
                    <div id="five-simular">

                    </div>
                    <!--Конец 5-ка похожих-->
                </td>
                <!--Конец контролов для правой панели-->
                <td class="p2"></td>
            </tr>
        </table>
    </div>
    <!--Конец основного содержимого-->
</div>




<!--Начало подвала-->
{% include 'footer.twig' %}
<!--Конец подвала-->

<!-- Yandex.Metrika counter --><script type="text/javascript">(function (d, w, c) { (w[c] = w[c] || []).push(function() { try { w.yaCounter15208930 = new Ya.Metrika({id:15208930, enableAll: true, webvisor:true}); } catch(e) {} }); var n = d.getElementsByTagName("script")[0], s = d.createElement("script"), f = function () { n.parentNode.insertBefore(s, n); }; s.type = "text/javascript"; s.async = true; s.src = (d.location.protocol == "https:" ? "https:" : "http:") + "//mc.yandex.ru/metrika/watch.js"; if (w.opera == "[object Opera]") { d.addEventListener("DOMContentLoaded", f); } else { f(); } })(document, window, "yandex_metrika_callbacks");</script><noscript><div><img src="//mc.yandex.ru/watch/15208930" style="position:absolute; left:-9999px;" alt="" /></div></noscript><!-- /Yandex.Metrika counter -->




<script language="javascript" type="text/javascript">
/**
 * Created by JetBrains PhpStorm.
 * User: a.kolomiec
 * Date: 23.12.11
 * Time: 15:21
 * To change this template use File | Settings | File Templates.
 */


$(document).ready(function(){
    init_jplayer();
    drawleft();
    drawcenter();
    drawright();
    drawlsearch();

});

function init_jplayer () {
    $("#jquery_jplayer_1").jPlayer({
        ready: function () {
            $(this).jPlayer("setMedia", {
                mp3: ""
            });
            init();
        },
        swfPath: "/js",
        errorAlerts: false,
        cssSelectorAncestor: "#fixed-wrapper",
        cssSelector: {
            videoPlay: ".jp-video-play",
            play: ".jp-play",
            pause: ".jp-pause",
            stop: ".jp-stop",
            seekBar: ".jp-seek-bar",
            playBar: ".jp-play-bar",
            mute: ".jp-mute",
            unmute: ".jp-unmute",
            volumeBar: ".jp-volume-bar",
            volumeBarValue: ".jp-volume-bar-value",
            volumeMax: ".jp-volume-max",
            currentTime: ".jp-current-time",
            duration: ".jp-duration",
            fullScreen: ".jp-full-screen",
            restoreScreen: ".jp-restore-screen",
            repeat: ".jp-repeat",
            repeatOff: ".jp-repeat-off",
            gui: ".jp-gui",
            noSolution: ".jp-no-solution"
        },
        supplied: "mp3, wma",
        ended: function () {
            //todo проверить что должны играть в данный момент.
            $.stickr({note:'Песня закончилась',className:'opacity',position:{right:0,top:0}});
            $(".jp-seek-bar").css("width","0%");

            var pltrack="";
            var plnow = $(".track-selected + .track");
            var track = plnow.attr("track-id");
            var par = $(".track-selected.track").parent();
            var side = getside(par);
            if (side == 'left'){
                if (typeof(pageleft) != "undefined"){
                    var cur_page = pageleft.inputData.pageCurrent;
                    var url = pageleft.inputData.baseUrl;
                    var page_total = pageleft.inputData.pagesTotal;
                }
            } else {
                if (typeof(pagecenter) != "undefined"){
                    var cur_page = pagecenter.inputData.pageCurrent;
                    var url = pagecenter.inputData.baseUrl;
                    var page_total = pagecenter.inputData.pagesTotal;
                }
            }


            //todo если есть плайлист то надо допилить для перехода по страничкам плейлиста.
            var page;
            if (typeof(track) == "undefined") {
                getnexttrack();

                if (page_total > cur_page) {
                    page = (cur_page - 0) + 1;
                    getpage(url, page, null, page_total,side);
                } else {
                    if ($(".jp-repeat").css("display") == "none") { // Если включен повтор
                        getpage(url, 1, null, page_total, side);
                    }
                }
            } else {
                playsong(plnow);
                state_save();
            }
        }
    });
}


// Определяем панель плеера на которой играет трек
function getside (par) {
    if ($(par).hasClass("left-block-top100")){
        return 'left';
    } else {
        if ($(par).hasClass("pl")) {
            return 'right';
        }
    }
}


// Выставляем обработчик событий на элементы управления.
function init () {

    $('.track').unbind('click');
    $('.track').bind('click',function () {
        playsong($(this));
        state_save();
        //$.stickr({note:'Play выполнен',className:'opacity',position:{right:0,top:0}});
    });

    $('.jp-prev').unbind('click');
    $('.jp-prev').bind('click', function () {
        var plnow = $(".track-selected").prev(".track");
        var track = $(plnow).attr("track-id");
        var par = $(".track-selected").parent();
        var side = getside(par);
        if (side == 'left'){
            var cur_page = pageleft.inputData.pageCurrent;
            var url = pageleft.inputData.baseUrl;
            var page_total = pageleft.inputData.pagesTotal;
        } else {
            var cur_page = pagecenter.inputData.pageCurrent;
            var url = pagecenter.inputData.baseUrl;
            var page_total = pagecenter.inputData.pagesTotal;
        }
        if (typeof(track) == "undefined") {
            // todo Выбрать из базы состояние плеера и проверить serial = 1 ? если да то ничего не делаем, если нет то сериал = сериал -1.заставляем плеер петь точто нам надо.

            getprevtrack();
            if (cur_page == 1){
                $.stickr({note:'Текущая страница первая',className:'opacity',position:{right:0,top:0}});
                plnow = $(".track-selected");
                playsong(plnow);
            } else {
                getpage(url, (cur_page - 1),"last", page_total, side);
                $.stickr({note:'Сменили страницу на '+(cur_page-1),className:'opacity',position:{right:0,top:0}});
            }
        }else {
            playsong(plnow);
        }
        $.stickr({note:'jp-prev выполнен',className:'opacity',position:{right:0,top:0}});
    });

    $('.jp-next').unbind('click');
    $('.jp-next').bind ('click',function () {
        var plnow = $(".track-selected").next(".track");
        var track = $(plnow).attr("track-id");
        var par = $(".track-selected").parent();
        var side = getside(par);
        if (side == 'left'){
            var cur_page = pageleft.inputData.pageCurrent;
            var url = pageleft.inputData.baseUrl;
            var page_total = pageleft.inputData.pagesTotal;
        } else {
            var cur_page = pagecenter.inputData.pageCurrent;
            var url = pagecenter.inputData.baseUrl;
            var page_total = pagecenter.inputData.pagesTotal;
        }
        if (typeof track == "undefined") {
            getnexttrack();
            if (page_total > cur_page){
                var page = (cur_page-0)+1;
                getpage(url, page, null , page_total, side);
            } else {
                if ($(".jp-repeat").css("display") == "none") { // Если включен повтор
                    getpage(url, 1, null , page_total, side);
                }
            }
        }else {
            playsong(plnow);
        }
        $.stickr({note:'jp-next выполнен',className:'opacity',position:{right:0,top:0}});
    });

    $('#search-in-vk').unbind('click');
    $('#search-in-vk').bind('click',function () {
        search();
    });
    $('input#search-input').submit(function (event) {
        event.preventDefault();

        search();

        return false;
    });
    $('h1').gradientText({
        colors: ['#50AADC', '#640064']
    });
    $("#top100").unbind('click');
    $("#top100").bind('click', function (){
        drawleft();
    });
    $("#go-out").unbind('click');
    $("#go-out").bind('click', function () {
        logout();
    });

    $(".add-in-playlist-sign").unbind('click');
    $(".add-in-playlist-sign").bind('click', function (event) {
        event.preventDefault();
        event.stopPropagation();
        addinplaylist($(this).parent());
    });
    $(".delete-sign").unbind('click');
    $(".delete-sign").bind('click', function (event) {
        event.preventDefault();
        event.stopPropagation();
        delfromplaylist($(this).parent());
    });

    $(".my-playlist").unbind('click');
    $(".my-playlist").bind('click', function (event) {
        event.preventDefault();
        event.stopPropagation();
        drawcenter($(this).attr("id"));
    });

    $("#btn-new-playlist").unbind('click');
    $("#btn-new-playlist").bind('click', function (event) {
        playlistname = prompt("Введите имя нового плейлиста", "Новый плейлист");

        newplaylist(playlistname);
    });

    $(".save-sign").unbind('click');
    $(".save-sign").bind('click', function (event) {
        event.stopPropagation();
    });
    $("#div-last-search p").unbind('click');
    $("#div-last-search p").bind('click', function (event) {
        event.stopPropagation();
        $("#search-input").val($(this).text());
        $.stickr({note:'search = '+$(this).text(),className:'opacity',position:{right:0,top:0}});
        search();

    });
    $("#btn-del-playlist").unbind('click');
    $("#btn-del-playlist").bind('click', function (event) {
        var playlistid = $(".pl").attr("id");
        delplaylist(playlistid);
    });



    //$(".track").draggable({ containment: "#wrapper-table-main", scroll: false, cursor: "move", distance: 30, revert: true });
    //$(".pl_header, .pl").droppable();
    //$(".pl_header, .pl").unbind( 'drop' );
    /*$(".pl_header, .pl").bind( 'drop', function(event, ui) {
        addinplaylist(ui.draggable);
    });*/
    //$.stickr({note:'Init выполнен',className:'opacity',position:{right:0,top:0}});

}

function getprevtrack () {
    $.stickr({note:'Отправляем запрос предыдущего трека на сервер',className:'opacity',position:{right:0,top:0}});
    $.ajax({
        url:	 "/getprevtrack/",

        success: function(response, code){

            var result = $.parseJSON(response);
            if (result) {
                playtrack(result['filename'], result['artist'], result['trak']);
            } else {

            }
            $.stickr({note:' /getprevtrack/ выполнен',className:'opacity',position:{right:0,top:0}});
        },

        error:  function(xhr, str){
            $.stickr({note:'Возникла ошибка: ' + xhr.responseCode,className:'opacity',position:{right:0,top:0}});
        },
        complete: function (response) {
        }
    });
}
function getnexttrack () {
    $.stickr({note:'Отправляем запрос следующего трека на сервер',className:'opacity',position:{right:0,top:0}});
    $.ajax({
        url:	 "/getnexttrack/",

        success: function(response, code){

            var result = $.parseJSON(response);
            if (result) {
                playtrack(result['filename'], result['artist'], result['trak']);
            } else {

            }
            $.stickr({note:' /getnexttrack/ выполнен',className:'opacity',position:{right:0,top:0}});
        },

        error:  function(xhr, str){
            $.stickr({note:'Возникла ошибка: ' + xhr.responseCode,className:'opacity',position:{right:0,top:0}});
        },
        complete: function (response) {
        }
    });
}

function playtrack (filename, artist, trak, save) {

    if (typeof (filename) != 'undefined'){
        if (filename != "undefined.mp3"){
            $("#jquery_jplayer_1").jPlayer("setMedia", {
                mp3: "/media/"+filename
            }).jPlayer("play");
            $(".jp-name-artist").text(artist);
            $(".jp-name-song").text(trak);
        }
    }
}

function logout() {
    $.stickr({note:'разлогиниться',className:'opacity',position:{right:0,top:0}});
    $.cookie('svireluser', null);
    $.ajax({
        url:	 "/logout/",
        success: function(response, code){ //да, мы пропустили последний параметр — он нам не нужен
            $.stickr({note:'logout выполнен',className:'opacity',position:{right:0,top:0}});
            $("#user").html("");
            $("#registration").html(response);
            drawcenter();
            state_save();
        },
        error:  function(xhr, str){
            $.stickr({note:'Возникла ошибка: ' + xhr.responseCode,className:'opacity',position:{right:0,top:0}});
        },
        complete: function (response) {
            init();
        }
    });
}


function search() {

    q = $('input[name="search-input"]').val();
    if (q == '' || (q.length<=3)) {
        $.stickr({note:'Запрос пустой',className:'opacity',position:{right:0,top:0}});

    }else {
        drawleft("s", q);
        drawlsearch();

        init();


    }
    $.stickr({note:'Search выполнен запрос'+q,className:'opacity',position:{right:0,top:0}});
}

function playsong (track) {
    $(".jp-seek-bar").css("width","0%");
    $('.track-selected').removeClass('track-selected');
    $(track).addClass('track-selected');

    var trackid = $(track).attr('track-id');
    //alert ( "TrackId="+trackid);
    // pltrack = encodeURI(pltrack);
    var artist = $(track).find(".track_artist").text();
    var trak= $(track).find(".track_name").text();


    if (trackid != "undefined" && typeof (trackid) != 'undefined') {
        $.stickr({note:'Ищу файл '+artist+'-'+trak+' '+trackid,className:'opacity',position:{right:0,top:0}});
        playtrack(trackid+".mp3", artist, trak, "save");
        $.stickr({note:'Playsong выполнен',className:'opacity',position:{right:0,top:0}});
    }

}

function changepage(url ,page, totalpages, side) {
    $.stickr({note:'Запрос '+url,className:'opacity',position:{right:0,top:0}});
    $.ajax({
        url:	 url+page,
        type:	 'GET', //что-нибудь получим
        success: function(response, code){ //да, мы пропустили последний параметр — он нам не нужен
            if ((code==200) || (response != "") ){
                $.stickr({note:'changepage выполнен'+url+page,className:'opacity',position:{right:0,top:0}});
                if (side == 'left') {
                    $("#leftblock").html(response);
                    delete pageleft; pageleft = new Paginator('pageleft', totalpages, 10, page, url, 'left');
                } else {
                    if (side == 'right') {
                        $(".pl").html(response);
                        delete pagecenter; pagecenter = new Paginator('pagecenter', totalpages, 10, page, url, 'right');
                    }
                }
            }else{
                $.stickr({note:'Сервер вернул какой-то непонятный код ответа: ' + code,className:'opacity',position:{right:0,top:0}});
            }
        },
        error:  function(xhr, str){
            $.stickr({note:'Возникла ошибка: ' + xhr.responseCode,className:'opacity',position:{right:0,top:0}});

        },
        complete: function (response) {
            init();
        }
    });
    return false;
}

function checkstate(url ,page, totalpages, side) {
    $.stickr({note:'Запрос '+url,className:'opacity',position:{right:0,top:0}});
    $.ajax({
        url:	 url+page,
        type:	 'GET',
        success: function(response, code){
            if ((code==200) || (response != "") ){
                $.stickr({note:'changepage выполнен'+url+page,className:'opacity',position:{right:0,top:0}});
            }else{
                $.stickr({note:'Сервер вернул какой-то непонятный код ответа: ' + code,className:'opacity',position:{right:0,top:0}});
            }
        },
        error:  function(xhr, str){
            $.stickr({note:'Возникла ошибка: ' + xhr.responseCode,className:'opacity',position:{right:0,top:0}});

        },
        complete: function (response) {
        }
    });
    return false;
}

function getpage(url ,page, num ,totalpages, side) {
    num = num == null;
    $.stickr({note:'Запрос '+url+ page,className:'opacity',position:{right:0,top:0}});
    $.ajax({
        url:	 url+page,
        type:	 'GET', //что-нибудь получим
        success: function(response, code){ //да, мы пропустили последний параметр — он нам не нужен
            if ((code==200) || (response != "") ){
                var par;
                if (side == 'left'){
                    par = $(".left-block-top100");
                } else {
                    par = $(".pl");
                }
                $.stickr({note:'getpage выполнен'+url,className:'opacity',position:{right:0,top:0}});
                if (num) {
                    plnow = $(par).html(response).find(".track:first");
                } else {
                    plnow = $(par).html(response).find(".track:last");
                }
                if (side == 'left'){
                    delete pageleft;
                    pageleft = new Paginator('pageleft', totalpages, 10, page, url, 'left');
                } else {
                    delete pagecenter;
                    pagecenter = new Paginator('pagecenter', totalpages, 10, page, url, 'right');
                }

                if (typeof plnow != "undefined"){
                    playsong(plnow);
                }
                //return response;

            }else{
                $.stickr({note:'Сервер вернул какой-то непонятный код ответа: ' + code,className:'opacity',position:{right:0,top:0}});
            }
        },
        error:  function(xhr, str){
            $.stickr({note:'Возникла ошибка: ' + xhr.responseCode,className:'opacity',position:{right:0,top:0}});

        },
        complete: function () {
            init();

        }
    });

}

function Checkuser(responce) {
    req = $.parseJSON(responce);

    if ( isNaN(req.id) ) {
        if ( req.code == 1 ) $.stickr({note:'Ошибка при регистрации '+req.code,className:'opacity',position:{right:0,top:0}});
        if ( req.code == 2 ) $.stickr({note:'Ошибка при регистрации '+req.code,className:'opacity',position:{right:0,top:0}});
        if ( req.code == 3 ) $.stickr({note:'Ошибка при регистрации '+req.code,className:'opacity',position:{right:0,top:0}});
    } else {
        return true;
    }
}

function regauth () {
    //todo При входе в систему сохранять поисковые запросы которые делал пользователь.
    login = $('input[name="login"]').val();
    pass  = $('input[name="password"]').val();
    $.stickr({note:'Топаем регистрироваться или логиниться: login: '+login+' Pass: '+ pass,className:'opacity',position:{right:0,top:0}});
    $.ajax({
        url:	 "/reg/",
        type:	 'POST',
        data: { login: login, pass: pass },
        success: function(response, code){
            $.stickr({note:'regauthcode = '+code+' выполнен'+response,className:'opacity',position:{right:0,top:0}});
            if (Checkuser(response)) {
                $.stickr({note:'Пользователь вошел или зарегистрировался? '+req.id,className:'opacity',position:{right:0,top:0}});
                $.cookie('svireluser', req.id,  { expires: 365, path: '/', domain: '{{ cookie_domain }}' });
                $("#registration").html("");
                drawright();
                drawcenter();
                drawlsearch();
            }
        },
        error:  function(xhr, str){
            $.stickr({note:'Возникла ошибка: ' + xhr.responseCode,className:'opacity',position:{right:0,top:0}});
        },
        complete: function (response) {
            init();
        }
    });
}



/*
 * Для запроса определенного контента для левой колонки указываем в параметре такие значения
 * 1: top100
 * 2: Жанры
 * 3: Радио
 * 4: Из vk.com
 * s: Поиск музыки
 * req: Строка запроса
 *
 * */
function drawleft(data, req){
    $.stickr({note:'Загружаем левую колонку',className:'opacity',position:{right:0,top:0}});
    $.ajax({
        url:	 "/getleft/",
        type:	 'POST', //что-нибудь получим
        data: { cont: data , req: req},
        success: function (response) {
            $.stickr({note:'Запрос drawleft выполнен',className:'opacity',position:{right:0,top:0}});
            delete pageleft;
            $("#left-column").html(response);
        },
        error:  function(xhr, str){
            $.stickr({note:'Возникла ошибка при запросе drawleft: ' + xhr.responseCode,className:'opacity',position:{right:0,top:0}});
        },
        complete: function () {
            drawlsearch();
            init();
        }
    });
}

function drawright(){
    $.stickr({note:'Загружаем правую колонку',className:'opacity',position:{right:0,top:0}});
    $.ajax({
        url:	 "/getregistration/",
        type:	 'POST', //что-нибудь получим
        success: function(response, code){ //да, мы пропустили последний параметр — он нам не нужен
            $("#registration").html(response);
            $.stickr({note:'Запрос drawright выполнен',className:'opacity',position:{right:0,top:0}});
        },
        error:  function(xhr, str){
            $.stickr({note:'Возникла ошибка при запросе drawcenter: ' + xhr.responseCode,className:'opacity',position:{right:0,top:0}});
        },
        complete: function (response) {
            init();
        }
    });
}


function addinplaylist (track) {
    var trackid = $(track).attr('track-id');
    var playlistid = $(".pl").attr("id");
    $.stickr({note:'Добавить трек id='+trackid+' в плейлист с id='+playlistid,className:'opacity',position:{right:0,top:0}});
    $.ajax({
        url:	 "/addinplaylist/",
        type:	 'POST',
        data: { trackid: trackid , playlistid: playlistid },
        success: function(response, code){
            $.stickr({note:'Запрос drawcenter выполнен',className:'opacity',position:{right:0,top:0}});
            drawcenter(playlistid);
        },
        error:  function(xhr, str){
            $.stickr({note:'Возникла ошибка при запросе drawcenter: ' + xhr.responseCode,className:'opacity',position:{right:0,top:0}});
        },
        complete: function () {
            init();
        }
    });
}

function delfromplaylist (track) {
    var playlistid = $(".pl").attr('id');
    var serial = $(track).attr("serial");
    $.stickr({note:'Удалить трек serial='+serial+' из плейлиста с id='+playlistid,className:'opacity',position:{right:0,top:0}});
    $.ajax({
        url:	 "/delfromplaylist/",
        type:	 'POST',
        data: { serial: serial , playlistid: playlistid },
        success: function(response, code){
            $.stickr({note:'Запрос delfromplaylist выполнен',className:'opacity',position:{right:0,top:0}});
            $("#center-column").html(response);
        },
        error:  function(xhr, str){
            $.stickr({note:'Возникла ошибка при запросе delfromplaylist: ' + xhr.responseCode,className:'opacity',position:{right:0,top:0}});
        },
        complete: function () {
            init();
        }
    });
}

function save_sign (track) {
    var trackid = $(track).attr('track-id');

}

function newplaylist(playlistname) {
    $.ajax({
        url:	 "/newplaylist/",
        type:	 'POST', //что-нибудь получим
        data: { playlistname: playlistname },
        success: function(response, code){ //да, мы пропустили последний параметр — он нам не нужен
            $.stickr({note:'Запрос drawlsearch выполнен',className:'opacity',position:{right:0,top:0}});
            drawright();
        },
        error:  function(xhr, str){
            $.stickr({note:'Возникла ошибка при запросе drawlsearch: ' + xhr.responseCode,className:'opacity',position:{right:0,top:0}});
        },
        complete: function () {
            init();
        }
    });
}
function delplaylist(playlistid) {
    $.ajax({
        url:	 "/delplaylist/",
        type:	 'POST', //что-нибудь получим
        data: { playlistid: playlistid },
        success: function(response, code){ //да, мы пропустили последний параметр — он нам не нужен
            $.stickr({note:'Запрос delete play list выполнен',className:'opacity',position:{right:0,top:0}});
            result = $.parseJSON(response);
            if (result.code == 0) {
                $.stickr({note:'code = 0',className:'opacity',position:{right:0,top:0}});
                drawcenter();
                drawright();
            } else {
                $.stickr({note:'code = 1',className:'opacity',position:{right:0,top:0}});
            }
        },
        error:  function(xhr, str){
            $.stickr({note:'Возникла ошибка при запросе drawlsearch: ' + xhr.responseCode,className:'opacity',position:{right:0,top:0}});
        },
        complete: function () {
            init();
        }
    });
}
function drawcenter(playlist, page){
    $.stickr({note:'Загружаем центральную колонку',className:'opacity',position:{right:0,top:0}});
    if (typeof(playlist) == "undefined") {
        playlist = "default";
    }
    if (typeof(page) == "undefined") {
        page = 0;
    }
    $.ajax({
        url:	 "/getcenter/"+playlist+"/"+page,
        type:	 'GET', //что-нибудь получим
        success: function(response, code){ //да, мы пропустили последний параметр — он нам не нужен
            $.stickr({note:'Запрос drawcenter выполнен',className:'opacity',position:{right:0,top:0}});
            $("#center-column").html(response);
        },
        error:  function(xhr, str){
            $.stickr({note:'Возникла ошибка при запросе drawcenter: ' + xhr.responseCode,className:'opacity',position:{right:0,top:0}});
        },
        complete: function () {
            init();
        }
    });
}


function drawlsearch () {
    $.ajax({
        url:	 "/showlastsearch/",
        type:	 'GET', //что-нибудь получим
        success: function(response, code){ //да, мы пропустили последний параметр — он нам не нужен
            $.stickr({note:'Запрос drawlsearch выполнен',className:'opacity',position:{right:0,top:0}});
            $("#div-last-search").html(response);
        },
        error:  function(xhr, str){
            $.stickr({note:'Возникла ошибка при запросе drawlsearch: ' + xhr.responseCode,className:'opacity',position:{right:0,top:0}});
        },
        complete: function () {
            init();
        }
    });
}

function state_save(){
    var username = $.cookie('svireluser');
    var par = $(".track-selected").parent();
    var side = getside(par);
    if (side == 'left') {
        var playlistid = $("#leftblock").attr("lbid");
    } else {
        var playlistid = $(".pl").attr("id");
    }
    var search = $('input[name="search-input"]').val();
    var serial = $(".track-selected").attr("serial");
    if (side == 'left'){
        if (typeof (pageleft) != "undefined") {
            var currentpage = pageleft.inputData.pageCurrent;

        } else {
            var currentpage=1;
        }

    } else {
        if (typeof (pagecenter) != "undefined") {
            var currentpage = pagecenter.inputData.pageCurrent;
        } else {
            var currentpage=1;
        }
    }
    //todo Когда будет готов сортировка сделать выбор сортировки.
    var sort = "";
    $.stickr({note:'Сохраняем состояние в базу',className:'opacity',position:{right:0,top:0}});
    $.ajax({
        url:	 "/state/save/",
        type:	 'POST',
        data: { username: username, side: side, playlistid:playlistid, search: search, serial:serial, currentpage:currentpage, sort:sort },
        success: function(response, code){
            $.stickr({note:'сохранение состояния прошло успешно.',className:'opacity',position:{right:0,top:0}});
        },
        error:  function(xhr, str){
            $.stickr({note:'Возникла ошибка при сохранении состяния: ' + xhr.responseCode,className:'opacity',position:{right:0,top:0}});
        }
    });
}


</script>


</body>
</html>